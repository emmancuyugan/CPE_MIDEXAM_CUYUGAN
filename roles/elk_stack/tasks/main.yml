- name: Install ELK Dependencies (Ubuntu)
  apt:
    name:
      - openjdk-11-jdk
      - apt-transport-https
      - curl
      - gpgv
      - gpgsm
      - gnupg-l10n
      - gnupg
      - dirmngr
    state: latest
  when: ansible_distribution == 'Ubuntu'

- name: Get PGP Key (Ubuntu)
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Install Elasticsearch repository into sources list (Ubuntu)
  apt_repository:
    repo: deb https://artifacts.elastic.co/packages/7.x/apt stable main
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Install Elasticsearch (Ubuntu)
  apt:
    name: elasticsearch
    state: latest
    update_cache: yes
  when: ansible_distribution == 'Ubuntu'

- name: Configure Elasticsearch change cluster name (Ubuntu)
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    line: "cluster.name: demo-elk"
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Configure Elasticsearch give cluster descriptive name (Ubuntu)
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    line: "node.name: elk-1"
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Configure Elasticsearch Add network.host (Ubuntu)
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    line: "network.host: 0.0.0.0"
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Configure Elasticsearch Add http.port (Ubuntu)
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    line: "http.port: 9200"
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Configure Elasticsearch Add discovery.type (Ubuntu)
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    line: "discovery.type: single-node"
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Creating an empty file for startup-timeout.conf 1 of 2 (Ubuntu)
  file:
    path: "/etc/systemd/system/elasticsearch.service.d"
    state: directory
  when: ansible_distribution == 'Ubuntu'

- name: Creating an empty file for startup-timeout.conf 2 of 2 (Ubuntu)
  file:
    path: "/etc/systemd/system/elasticsearch.service.d/startup-timeout.conf"
    state: touch
  when: ansible_distribution == 'Ubuntu'

- name: Prevent systemd service start operation from timing out (Ubuntu)
  copy:
    dest: "/etc/systemd/system/elasticsearch.service.d/startup-timeout.conf"
    content: |
      [Service]
      TimeoutStartSec=3min
  when: ansible_distribution == 'Ubuntu'

- name: Run daemon-reload for elasticsearch (Ubuntu)
  systemd: daemon_reload=yes
  when: ansible_distribution == 'Ubuntu'

- name: Enable service Elasticsearch and ensure it is not masked (Ubuntu)
  systemd:
    name: elasticsearch
    enabled: yes
    masked: no
  when: ansible_distribution == 'Ubuntu'

- name: ensure elasticsearch is running (Ubuntu)
  systemd: state=started name=elasticsearch
  when: ansible_distribution == 'Ubuntu'

- name: Install Logstash (Ubuntu)
  apt:
    name: logstash
    state: latest
    update_cache: yes
  when: ansible_distribution == 'Ubuntu'

- name: Run daemon-reload for logstash (Ubuntu)
  systemd: daemon_reload=yes
  when: ansible_distribution == 'Ubuntu'

- name: Enable service logstash (Ubuntu)
  systemd:
    name: logstash
    enabled: yes
  when: ansible_distribution == 'Ubuntu'

- name: ensure logstash is running (Ubuntu)
  systemd: state=started name=logstash
  when: ansible_distribution == 'Ubuntu'

- name: Install Kibana (Ubuntu)
  apt:
    name: kibana
    state: latest
    update_cache: yes
  when: ansible_distribution == 'Ubuntu'

- name: Configure Kibana Add server.port (Ubuntu)
  lineinfile:
    dest: /etc/kibana/kibana.yml
    line: "server.port: 5601"
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Configure Kibana Add server.host (Ubuntu)
  lineinfile:
    dest: /etc/kibana/kibana.yml
    line: 'server.host: “0.0.0.0”'
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Configure Kibana Add server.name (Ubuntu)
  lineinfile:
    dest: /etc/kibana/kibana.yml
    line: 'server.name: “demo-kibana”'
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Configure Kibana Add elasticsearch.hosts (Ubuntu)
  lineinfile:
    dest: /etc/kibana/kibana.yml
    line: 'elasticsearch.hosts: [“http://0.0.0.0:9200"]'
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Run daemon-reload for kibana (Ubuntu)
  systemd: daemon_reload=yes
  when: ansible_distribution == 'Ubuntu'

- name: Enable service Kibana (Ubuntu)
  systemd:
    name: kibana
    enabled: yes
  when: ansible_distribution == 'Ubuntu'

- name: Start Elasticsearch service
  shell: systemctl start elasticsearch
  when: ansible_distribution == 'Ubuntu'

- name: Start Kibana
  shell: systemctl start kibana
  when: ansible_distribution == 'Ubuntu'

- name: Install ELK Dependencies (CentOS)
  yum:
    name:
      - java-11-openjdk-devel
      - curl
      - gnupg2
    state: latest
  when: ansible_distribution == 'CentOS'

- name: Get PGP Key (CentOS)
  rpm_key:
    key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
  when: ansible_distribution == 'CentOS'

- name: Install Elasticsearch repository into sources list (CentOS)
  yum_repository:
    name: elasticsearch
    description: Elasticsearch repository for 7.x packages
    baseurl: https://artifacts.elastic.co/packages/7.x/yum
    gpgcheck: yes
    gpgkey: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    enabled: yes
  when: ansible_distribution == 'CentOS'

- name: Install Elasticsearch (CentOS)
  yum:
    name: elasticsearch
    state: latest
  when: ansible_distribution == 'CentOS'

- name: Install Kibana (CentOS)
  dnf:
    name: kibana
    state: latest
  when: ansible_distribution == 'CentOS'

- name: Configure Kibana Add server.port (CentOS)
  lineinfile:
    dest: /etc/kibana/kibana.yml
    line: "server.port: 5601"
    state: present
  when: ansible_distribution == 'CentOS'

- name: Configure Kibana Add server.host (CentOS)
  lineinfile:
    dest: /etc/kibana/kibana.yml
    line: 'server.host: "0.0.0.0"'
    state: present
  when: ansible_distribution == 'CentOS'

- name: Configure Kibana Add server.name (CentOS)
  lineinfile:
    dest: /etc/kibana/kibana.yml
    line: 'server.name: "demo-kibana"'
    state: present
  when: ansible_distribution == 'CentOS'

- name: Configure Kibana Add elasticsearch.hosts (CentOS)
  lineinfile:
    dest: /etc/kibana/kibana.yml
    line: 'elasticsearch.hosts: ["http://0.0.0.0:9200"]'
    state: present
  when: ansible_distribution == 'CentOS'

- name: Run daemon-reload for kibana (CentOS)
  systemd: daemon_reload=yes
  when: ansible_distribution == 'CentOS'

- name: Enable service Kibana (CentOS)
  systemd:
    name: kibana
    enabled: yes
  when: ansible_distribution == 'CentOS'

- name: Start Elasticsearch service
  shell: systemctl start elasticsearch
  when: ansible_distribution == 'CentOS'

- name: Start Kibana
  shell: systemctl start kibana
  when: ansible_distribution == 'CentOS'

